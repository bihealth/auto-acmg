# generated by datamodel-codegen:
#   filename:  ex.json
#   timestamp: 2024-03-20T17:05:32+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Query(BaseModel):
    genome_release: str
    chromosome: str
    start: int
    stop: int


class Cadd(BaseModel):
    Chrom: Optional[str] = None
    Pos: Optional[int] = None
    Ref: Optional[str] = None
    Alt: Optional[str] = None
    Type: Optional[str] = None
    Length: Optional[int] = None
    AnnoType: Optional[str] = None
    Consequence: Optional[str] = None
    ConsScore: Optional[int] = None
    ConsDetail: Optional[str] = None
    GC: Optional[float] = None
    CpG: Optional[float] = None
    motifECount: Optional[None] = None
    motifEName: Optional[None] = None
    motifEHIPos: Optional[None] = None
    motifEScoreChng: Optional[None] = None
    oAA: Optional[None] = None
    nAA: Optional[None] = None
    GeneID: Optional[str] = None
    FeatureID: Optional[str] = None
    GeneName: Optional[str] = None
    CCDS: Optional[str] = None
    Intron: Optional[str] = None
    Exon: Optional[None] = None
    cDNApos: Optional[None] = None
    relcDNApos: Optional[None] = None
    CDSpos: Optional[None] = None
    relCDSpos: Optional[None] = None
    protPos: Optional[None] = None
    relProtPos: Optional[None] = None
    Domain: Optional[None] = None
    Dst2Splice: Optional[None] = None
    Dst2SplType: Optional[None] = None
    minDistTSS: Optional[int] = None
    minDistTSE: Optional[int] = None
    SIFTcat: Optional[None] = None
    SIFTval: Optional[None] = None
    PolyPhenCat: Optional[None] = None
    PolyPhenVal: Optional[None] = None
    priPhCons: Optional[float] = None
    mamPhCons: Optional[float] = None
    verPhCons: Optional[float] = None
    priPhyloP: Optional[float] = None
    mamPhyloP: Optional[float] = None
    verPhyloP: Optional[float] = None
    bStatistic: Optional[int] = None
    targetScan: Optional[None] = None
    # mirSVR_Score: Optional[None] = Field(..., alias="mirSVR-Score")
    # mirSVR_E: Optional[None] = Field(..., alias="mirSVR-E")
    # mirSVR_Aln: Optional[None] = Field(..., alias="mirSVR-Aln")
    mirSVR_Score: Optional[None] = None
    mirSVR_E: Optional[None] = None
    mirSVR_Aln: Optional[None] = None
    cHmmTssA: Optional[float] = None
    cHmmTssAFlnk: Optional[float] = None
    cHmmTxFlnk: Optional[float] = None
    cHmmTx: Optional[float] = None
    cHmmTxWk: Optional[float] = None
    cHmmEnhG: Optional[float] = None
    cHmmEnh: Optional[float] = None
    cHmmZnfRpts: Optional[float] = None
    cHmmHet: Optional[float] = None
    cHmmTssBiv: Optional[float] = None
    cHmmBivFlnk: Optional[float] = None
    cHmmEnhBiv: Optional[float] = None
    cHmmReprPC: Optional[float] = None
    cHmmReprPCWk: Optional[float] = None
    cHmmQuies: Optional[float] = None
    GerpRS: Optional[None] = None
    GerpRSpval: Optional[None] = None
    GerpN: Optional[float] = None
    GerpS: Optional[float] = None
    TFBS: Optional[int] = None
    TFBSPeaks: Optional[int] = None
    TFBSPeaksMax: Optional[float] = None
    tOverlapMotifs: Optional[None] = None
    motifDist: Optional[None] = None
    Segway: Optional[str] = None
    EncH3K27Ac: Optional[float] = None
    EncH3K4Me1: Optional[float] = None
    EncH3K4Me3: Optional[float] = None
    EncExp: Optional[float] = None
    EncNucleo: Optional[float] = None
    EncOCC: Optional[int] = None
    EncOCCombPVal: Optional[float] = None
    EncOCDNasePVal: Optional[float] = None
    EncOCFairePVal: Optional[float] = None
    EncOCpolIIPVal: Optional[float] = None
    EncOCctcfPVal: Optional[float] = None
    EncOCmycPVal: Optional[float] = None
    EncOCDNaseSig: Optional[float] = None
    EncOCFaireSig: Optional[float] = None
    EncOCpolIISig: Optional[float] = None
    EncOCctcfSig: Optional[float] = None
    EncOCmycSig: Optional[float] = None
    Grantham: Optional[None] = None
    # SpliceAI_acc_gain: Optional[float] = Field(..., alias="SpliceAI-acc-gain")
    # SpliceAI_acc_loss: Optional[float] = Field(..., alias="SpliceAI-acc-loss")
    # SpliceAI_don_gain: Optional[float] = Field(..., alias="SpliceAI-don-gain")
    # SpliceAI_don_loss: Optional[float] = Field(..., alias="SpliceAI-don-loss")
    SpliceAI_acc_gain: Optional[float] = None
    SpliceAI_acc_loss: Optional[float] = None
    SpliceAI_don_gain: Optional[float] = None
    SpliceAI_don_loss: Optional[float] = None
    MMSp_acceptorIntron: Optional[None] = None
    MMSp_acceptor: Optional[None] = None
    MMSp_exon: Optional[None] = None
    MMSp_donor: Optional[None] = None
    MMSp_donorIntron: Optional[None] = None
    Dist2Mutation: Optional[int] = None
    Freq100bp: Optional[int] = None
    Rare100bp: Optional[int] = None
    Sngl100bp: Optional[int] = None
    Freq1000bp: Optional[int] = None
    Rare1000bp: Optional[int] = None
    Sngl1000bp: Optional[int] = None
    Freq10000bp: Optional[int] = None
    Rare10000bp: Optional[int] = None
    Sngl10000bp: Optional[int] = None
    # dbscSNV_ada_score: Optional[None] = Field(..., alias="dbscSNV-ada_score")
    # dbscSNV_rf_score: Optional[None] = Field(..., alias="dbscSNV-rf_score")
    dbscSNV_ada_score: Optional[None] = None
    dbscSNV_rf_score: Optional[None] = None
    RawScore: Optional[float] = None
    PHRED: Optional[float] = None


class DbsnpItem(BaseModel):
    chrom: str
    pos: int
    refAllele: str
    altAllele: str
    rsId: int


class VepItem(BaseModel):
    allele: str
    consequence: str
    impact: str
    symbol: Optional[str] = None
    gene: Optional[str] = None
    featureType: str
    feature: str
    featureBiotype: str
    intron: Optional[str] = None
    hgvsc: Optional[str] = None
    existingVariation: Optional[str] = None
    dbsnpId: str
    strand: Optional[str] = None
    variantClass: str
    minimised: str
    symbolSource: Optional[str] = None
    hgncId: Optional[str] = None
    canonical: Optional[bool] = None
    ccds: Optional[str] = None
    ensp: Optional[str] = None
    swissprot: Optional[str] = None
    uniparc: Optional[str] = None
    genePheno: Optional[str] = None
    gmaf: Optional[float] = None
    amrMaf: Optional[float] = None
    easMaf: Optional[float] = None
    eurMaf: Optional[float] = None
    sasMaf: Optional[float] = None
    aaMaf: Optional[float] = None
    trembl: Optional[str] = None


class Overall(BaseModel):
    ac: Optional[int] = None
    an: Optional[int] = None
    af: Optional[float] = None


class Xx(BaseModel):
    ac: Optional[int] = None
    an: Optional[int] = None
    af: Optional[float] = None


class Xy(BaseModel):
    ac: Optional[int] = None
    an: Optional[int] = None
    af: Optional[float] = None


class Counts(BaseModel):
    overall: Optional[Overall] = None
    xx: Optional[Xx] = None
    xy: Optional[Xy] = None


class ByPopulationItem(BaseModel):
    population: str
    counts: Counts
    faf95: Optional[float] = None
    faf99: Optional[float] = None


class BySex(BaseModel):
    overall: Optional[Overall] = None
    xx: Optional[Xx] = None
    xy: Optional[Xy] = None


class Raw(BaseModel):
    ac: Optional[int] = None
    an: Optional[int] = None
    af: Optional[float] = None


class AlleleCount(BaseModel):
    byPopulation: List[ByPopulationItem]
    bySex: BySex
    raw: Optional[Raw] = None
    popmax: Optional[str] = None
    afPopmax: Optional[float] = None
    acPopmax: Optional[int] = None
    anPopmax: Optional[int] = None
    nhomaltPopmax: Optional[int] = None
    cohort: Optional[str] = None


class VariantInfo(BaseModel):
    variantType: str
    alleleType: str
    nAltAlleles: int


class QualityInfo(BaseModel):
    fs: float
    inbreedingCoeff: float
    mq: float
    mqRankSum: float
    qd: float
    readPosRankSum: float
    vqsrPositiveTrainSite: Optional[bool] = None
    baseQRankSum: float
    clippingRankSum: float
    sor: float
    dp: int
    vqslod: float
    vqsrCulprit: str
    pabMax: float


class AgeInfo(BaseModel):
    ageHistHomNSmaller: int
    ageHistHomNLarger: int
    ageHistHetNSmaller: int
    ageHistHetNLarger: int


class GnomadGenome(BaseModel):
    chrom: Optional[str] = None
    pos: Optional[int] = None
    refAllele: Optional[str] = None
    altAllele: Optional[str] = None
    vep: Optional[List[VepItem]] = None
    alleleCounts: Optional[List[AlleleCount]] = None
    variantInfo: Optional[VariantInfo] = None
    qualityInfo: Optional[QualityInfo] = None
    ageInfo: Optional[AgeInfo] = None


class AnnonarsRangeResult(BaseModel):
    cadd: Optional[Cadd] = None
    dbsnp: Optional[List[DbsnpItem]] = None
    dbnsfp: Optional[Dict[str, Any]] = None
    dbscsnv: Optional[Dict[str, Any]] = None
    gnomad_mtdna: Optional[List] = None
    gnomad_exomes: Optional[List] = None
    gnomad_genomes: Optional[List[GnomadGenome]] = None
    helixmtdb: Optional[List] = None
    ucsc_conservation: Optional[List] = None
    clinvar: Optional[List] = None


class AnnonarsRangeResponse(BaseModel):
    server_version: str
    query: Query
    result: AnnonarsRangeResult
