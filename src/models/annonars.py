# generated by datamodel-codegen:
#   filename:  ex.json
#   timestamp: 2024-03-20T17:05:32+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Query(BaseModel):
    genome_release: str
    chromosome: str
    start: int
    stop: int


class Cadd(BaseModel):
    Chrom: str
    Pos: int
    Ref: str
    Alt: str
    Type: str
    Length: int
    AnnoType: str
    Consequence: str
    ConsScore: int
    ConsDetail: str
    GC: float
    CpG: float
    motifECount: None
    motifEName: None
    motifEHIPos: None
    motifEScoreChng: None
    oAA: None
    nAA: None
    GeneID: str
    FeatureID: str
    GeneName: str
    CCDS: str
    Intron: str
    Exon: None
    cDNApos: None
    relcDNApos: None
    CDSpos: None
    relCDSpos: None
    protPos: None
    relProtPos: None
    Domain: None
    Dst2Splice: None
    Dst2SplType: None
    minDistTSS: int
    minDistTSE: int
    SIFTcat: None
    SIFTval: None
    PolyPhenCat: None
    PolyPhenVal: None
    priPhCons: float
    mamPhCons: float
    verPhCons: float
    priPhyloP: float
    mamPhyloP: float
    verPhyloP: float
    bStatistic: int
    targetScan: None
    mirSVR_Score: None = Field(..., alias="mirSVR-Score")
    mirSVR_E: None = Field(..., alias="mirSVR-E")
    mirSVR_Aln: None = Field(..., alias="mirSVR-Aln")
    cHmmTssA: float
    cHmmTssAFlnk: float
    cHmmTxFlnk: float
    cHmmTx: float
    cHmmTxWk: float
    cHmmEnhG: float
    cHmmEnh: float
    cHmmZnfRpts: float
    cHmmHet: float
    cHmmTssBiv: float
    cHmmBivFlnk: float
    cHmmEnhBiv: float
    cHmmReprPC: float
    cHmmReprPCWk: float
    cHmmQuies: float
    GerpRS: None
    GerpRSpval: None
    GerpN: float
    GerpS: float
    TFBS: int
    TFBSPeaks: int
    TFBSPeaksMax: float
    tOverlapMotifs: None
    motifDist: None
    Segway: str
    EncH3K27Ac: float
    EncH3K4Me1: float
    EncH3K4Me3: float
    EncExp: float
    EncNucleo: float
    EncOCC: int
    EncOCCombPVal: float
    EncOCDNasePVal: float
    EncOCFairePVal: float
    EncOCpolIIPVal: float
    EncOCctcfPVal: float
    EncOCmycPVal: float
    EncOCDNaseSig: float
    EncOCFaireSig: float
    EncOCpolIISig: float
    EncOCctcfSig: float
    EncOCmycSig: float
    Grantham: None
    SpliceAI_acc_gain: float = Field(..., alias="SpliceAI-acc-gain")
    SpliceAI_acc_loss: float = Field(..., alias="SpliceAI-acc-loss")
    SpliceAI_don_gain: float = Field(..., alias="SpliceAI-don-gain")
    SpliceAI_don_loss: float = Field(..., alias="SpliceAI-don-loss")
    MMSp_acceptorIntron: None
    MMSp_acceptor: None
    MMSp_exon: None
    MMSp_donor: None
    MMSp_donorIntron: None
    Dist2Mutation: int
    Freq100bp: int
    Rare100bp: int
    Sngl100bp: int
    Freq1000bp: int
    Rare1000bp: int
    Sngl1000bp: int
    Freq10000bp: int
    Rare10000bp: int
    Sngl10000bp: int
    dbscSNV_ada_score: None = Field(..., alias="dbscSNV-ada_score")
    dbscSNV_rf_score: None = Field(..., alias="dbscSNV-rf_score")
    RawScore: float
    PHRED: float


class DbsnpItem(BaseModel):
    chrom: str
    pos: int
    refAllele: str
    altAllele: str
    rsId: int


class VepItem(BaseModel):
    allele: str
    consequence: str
    impact: str
    symbol: Optional[str] = None
    gene: Optional[str] = None
    featureType: str
    feature: str
    featureBiotype: str
    intron: Optional[str] = None
    hgvsc: Optional[str] = None
    existingVariation: Optional[str] = None
    dbsnpId: str
    strand: Optional[str] = None
    variantClass: str
    minimised: str
    symbolSource: Optional[str] = None
    hgncId: Optional[str] = None
    canonical: Optional[bool] = None
    ccds: Optional[str] = None
    ensp: Optional[str] = None
    swissprot: Optional[str] = None
    uniparc: Optional[str] = None
    genePheno: Optional[str] = None
    gmaf: Optional[float] = None
    amrMaf: Optional[float] = None
    easMaf: Optional[float] = None
    eurMaf: Optional[float] = None
    sasMaf: Optional[float] = None
    aaMaf: Optional[float] = None
    trembl: Optional[str] = None


class Overall(BaseModel):
    ac: Optional[int] = None
    an: int
    af: Optional[float] = None


class Xx(BaseModel):
    ac: Optional[int] = None
    an: int
    af: Optional[float] = None


class Xy(BaseModel):
    ac: Optional[int] = None
    an: int
    af: Optional[float] = None


class Counts(BaseModel):
    overall: Optional[Overall] = None
    xx: Optional[Xx] = None
    xy: Optional[Xy] = None


class ByPopulationItem(BaseModel):
    population: str
    counts: Counts
    faf95: Optional[float] = None
    faf99: Optional[float] = None


class BySex(BaseModel):
    overall: Optional[Overall] = None
    xx: Optional[Xx] = None
    xy: Optional[Xy] = None


class Raw(BaseModel):
    ac: Optional[int] = None
    an: int
    af: Optional[float] = None


class AlleleCount(BaseModel):
    byPopulation: List[ByPopulationItem]
    bySex: BySex
    raw: Optional[Raw] = None
    popmax: Optional[str] = None
    afPopmax: Optional[float] = None
    acPopmax: Optional[int] = None
    anPopmax: Optional[int] = None
    nhomaltPopmax: Optional[int] = None
    cohort: Optional[str] = None


class VariantInfo(BaseModel):
    variantType: str
    alleleType: str
    nAltAlleles: int


class QualityInfo(BaseModel):
    fs: float
    inbreedingCoeff: float
    mq: float
    mqRankSum: float
    qd: float
    readPosRankSum: float
    vqsrPositiveTrainSite: Optional[bool] = None
    baseQRankSum: float
    clippingRankSum: float
    sor: float
    dp: int
    vqslod: float
    vqsrCulprit: str
    pabMax: float


class AgeInfo(BaseModel):
    ageHistHomNSmaller: int
    ageHistHomNLarger: int
    ageHistHetNSmaller: int
    ageHistHetNLarger: int


class GnomadGenome(BaseModel):
    chrom: str
    pos: int
    refAllele: str
    altAllele: str
    vep: List[VepItem]
    alleleCounts: List[AlleleCount]
    variantInfo: VariantInfo
    qualityInfo: QualityInfo
    ageInfo: AgeInfo


class Result(BaseModel):
    cadd: Cadd
    dbsnp: List[DbsnpItem]
    dbnsfp: Dict[str, Any]
    dbscsnv: Dict[str, Any]
    gnomad_mtdna: List
    gnomad_exomes: List
    gnomad_genomes: List[GnomadGenome]
    helixmtdb: List
    ucsc_conservation: List
    clinvar: List


class AnnonarsResponse(BaseModel):
    server_version: str
    query: Query
    result: Result
