# generated by datamodel-codegen:
#   filename:  BRCA1_gene.json
#   timestamp: 2024-06-25T13:17:09+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, validator


class AcmgSf(BaseModel):
    hgncId: str
    ensemblGeneId: str
    ncbiGeneId: str
    geneSymbol: str
    mimGeneId: str
    diseasePhenotype: str
    disorderMim: str
    phenotypeCategory: str
    inheritance: str
    sfListVersion: str
    variantsToReport: str


class Clingen(BaseModel):
    geneSymbol: str
    ncbiGeneId: str
    genomicLocation37: str
    genomicLocation38: str
    haploinsufficiencyScore: str
    triplosensitivityScore: str
    haploinsufficiencyDiseaseId: str


class Dbnsfp(BaseModel):
    geneName: str
    ensemblGene: str
    chr: str
    geneOtherNames: List[str]
    uniprotAcc: str
    uniprotId: str
    entrezGeneId: str
    ccdsId: List[str]
    refseqId: List[str]
    ucscId: str
    mimId: List[str]
    omimId: List[str]
    geneFullName: str
    pathwayUniprot: str
    pathwayBiocartaShort: List[str]
    pathwayBiocartaFull: List[str]
    pathwayConsensusPathDb: List[str]
    pathwayKeggId: List[str]
    pathwayKeggFull: List[str]
    functionDescription: List[str]
    diseaseDescription: List[str]
    mimPhenotypeId: List[str]
    mimDisease: List[str]
    orphanetDisorderId: List[str]
    orphanetDisorder: List[str]
    orphanetAssociationType: List[str]
    traitAssociationGwas: List[str]
    hpoId: List[str]
    hpoName: List[str]
    goBiologicalProcess: List[str]
    goCellularComponent: List[str]
    goMolecularFunction: List[str]
    tissueSpecificityUniprot: List[str]
    expressionEgenetics: List[str]
    expressionGnfAtlas: List[str]
    interactionsIntact: List[str]
    interactionsBiogrid: List[str]
    interactionsConsensusPathDb: List[str]
    haploinsufficiency: float
    hipredScore: float
    hipred: str
    ghis: float
    prec: float
    knownRecInfo: str
    rvisEvs: float
    rvisPercentileEvs: float
    lofFdrExac: float
    rvisExac: float
    rvisPercentileExac: float
    exacPli: float
    exacPrec: float
    exacPnull: float
    exacNontcgaPli: float
    exacNontcgaPrec: float
    exacNontcgaPnull: float
    exacNonpsychPli: float
    exacNonpsychPrec: float
    exacNonpsychPnull: float
    gnomadPli: float
    gnomadPrec: float
    gnomadPnull: float
    exacDelScore: float
    exacDupScore: float
    exacCnvScore: float
    exacCnvFlag: str
    gdi: float
    gdiPhred: float
    gdpAllDiseaseCausing: str
    gdpAllMendelian: str
    gdpAllMendelianAd: str
    gdpMendelianAr: str
    gdpPid: str
    gdpPidAd: str
    gdpPidAr: str
    gdpCancer: str
    gdbCancerRec: str
    gdpCancerDom: str
    loftoolScore: float
    sorvaLofMaf5HetOrHom: float
    sorvaLofMaf5HomOrComphet: int
    sorvaLofMaf1HetOrHom: float
    sorvaLofMaf1HomOrComphet: int
    sorvaLofOrMisMaf5HetOrHom: float
    sorvaLofOrMisMaf5HomOrComphet: float
    sorvaLofOrMisMaf1HetOrHom: float
    sorvaLofOrMisMaf1HomOrComphet: float
    essentialGene: str
    essentialGeneCrispr: str
    essentialGeneCrispr2: str
    essentialGeneGeneTrap: str
    geneIndispensabilityScore: int
    geneIndispensabilityPred: str
    mgiMouseGene: str
    mgiMousePhenotype: str
    zfinZebrafishGene: str
    zfinZebrafishStructure: str
    zfinZebrafishPhenotypeQuality: str
    zfinZebrafishPhenotypeTag: str


class GnomadConstraints(BaseModel):
    ensemblGeneId: str
    entrezId: str
    geneSymbol: str
    expLof: float
    expMis: float
    expSyn: float
    misZ: float
    obsLof: int
    obsMis: int
    obsSyn: int
    oeLof: float
    oeLofLower: float
    oeLofUpper: float
    oeMis: float
    oeMisLower: float
    oeMisUpper: float
    oeSyn: float
    oeSynLower: float
    oeSynUpper: float
    pli: float
    synZ: float


class LsdbItem(BaseModel):
    name: str
    url: str


class Hgnc(BaseModel):
    hgncId: str
    symbol: str
    name: str
    locusGroup: str
    locusType: str
    status: str
    location: str
    locationSortable: str
    aliasSymbol: List[str]
    aliasName: List[str]
    prevName: List[str]
    geneGroup: List[str]
    geneGroupId: List[int]
    dateApprovedReserved: str
    dateNameChanged: str
    dateModified: str
    entrezId: str
    ensemblGeneId: str
    vegaId: str
    ucscId: str
    ena: List[str]
    refseqAccession: List[str]
    ccdsId: List[str]
    uniprotIds: List[str]
    pubmedId: List[int]
    mgdId: List[str]
    rgdId: List[str]
    lsdb: List[LsdbItem]
    cosmic: str
    omimId: List[str]
    orphanet: int
    agr: str
    maneSelect: List[str]


class RifEntry(BaseModel):
    text: Optional[str] = None
    pmids: Optional[List[int]] = None


class Ncbi(BaseModel):
    geneId: str
    summary: str
    rifEntries: List[RifEntry]


class OmimDisease(BaseModel):
    omimId: str
    label: str


class Omim(BaseModel):
    hgncId: str
    omimDiseases: List[OmimDisease]


class Rcnv(BaseModel):
    hgncId: str
    pHaplo: float
    pTriplo: float


class Shet(BaseModel):
    hgncId: str
    sHet: float


class Record(BaseModel):
    tissue: str
    tissueDetailed: str
    tpms: List[float]


class Gtex(BaseModel):
    hgncId: str
    ensemblGeneId: str
    ensemblGeneVersion: str
    records: List[Record]


class Domino(BaseModel):
    geneSymbol: str
    score: float


class DecipherHi(BaseModel):
    hgncId: str
    hgncSymbol: str
    pHi: float
    hiIndex: float


class GeneData(BaseModel):
    hgncId: str
    hgncSymbol: str
    geneSymbol: str


class Stats(BaseModel):
    numberOfGenes: int
    numberOfRegions: Optional[int] = None
    numberOfStrs: Optional[int] = None


class Type(BaseModel):
    name: str
    slug: str
    description: str


class Panel(BaseModel):
    id: int
    hashId: Optional[str] = None
    name: str
    diseaseGroup: Optional[str] = None
    diseaseSubGroup: Optional[str] = None
    version: str
    versionCreated: str
    relevantDisorders: Optional[List[str]] = None
    stats: Stats
    types: List[Type]


class PanelappItem(BaseModel):
    geneData: GeneData
    entityType: str
    entityName: str
    confidenceLevel: str
    penetrance: Optional[str] = None
    evidence: List[str]
    phenotypes: Optional[List[str]] = None
    modeOfInheritance: Optional[str] = None
    panel: Panel
    publications: Optional[List[str]] = None


class LabeledDisorder(BaseModel):
    termId: str
    title: str


class DiseaseAssociation(BaseModel):
    hgncId: str
    labeledDisorders: List[LabeledDisorder]
    diseaseName: str
    diseaseDefinition: Optional[str] = None
    sources: List[str]
    confidence: str


class Panel1(BaseModel):
    id: int
    name: str
    version: str


class PanelappAssociation(BaseModel):
    hgncId: str
    confidenceLevel: str
    entityType: str
    modeOfInheritance: str
    phenotypes: Optional[List[str]] = None
    panel: Panel1


class Conditions(BaseModel):
    hgncId: str
    diseaseAssociations: List[DiseaseAssociation]
    panelappAssociations: List[PanelappAssociation]


class GeneInfo(BaseModel):
    acmgSf: AcmgSf
    clingen: Clingen
    dbnsfp: Dbnsfp
    gnomadConstraints: GnomadConstraints
    hgnc: Hgnc
    ncbi: Ncbi
    omim: Omim
    rcnv: Rcnv
    shet: Shet
    gtex: Gtex
    domino: Domino
    decipherHi: DecipherHi
    panelapp: List[PanelappItem]
    conditions: Conditions


class Genes(RootModel):
    root: Dict[str, GeneInfo]


class Model(BaseModel):
    genes: Genes
